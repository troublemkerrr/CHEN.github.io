<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CHEN&#39;s Blog</title>
  
  <subtitle>a blog created by CHEN</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-20T14:03:27.832Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CHEN</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>test</title>
    <link href="http://example.com/2022/01/20/test/"/>
    <id>http://example.com/2022/01/20/test/</id>
    <published>2022-01-20T14:03:03.623Z</published>
    <updated>2022-01-20T14:03:27.832Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-chhewdnvf"><a href="#1-chhewdnvf" class="headerlink" title="1.chhewdnvf"></a>1.chhewdnvf</h3><h3 id="2-bewhhjbu"><a href="#2-bewhhjbu" class="headerlink" title="2.bewhhjbu"></a>2.bewhhjbu</h3><h3 id="3-hvh"><a href="#3-hvh" class="headerlink" title="3.hvh"></a>3.hvh</h3><h3 id="4-cbb"><a href="#4-cbb" class="headerlink" title="4.cbb"></a>4.cbb</h3><h3 id="5-vv"><a href="#5-vv" class="headerlink" title="5.vv"></a>5.vv</h3><h3 id="6-yhv"><a href="#6-yhv" class="headerlink" title="6.yhv"></a>6.yhv</h3><h3 id="7-bchc"><a href="#7-bchc" class="headerlink" title="7.bchc"></a>7.bchc</h3><h3 id="8-hdwhj"><a href="#8-hdwhj" class="headerlink" title="8. hdwhj"></a>8. hdwhj</h3><h3 id="9-nxbchjhjb"><a href="#9-nxbchjhjb" class="headerlink" title="9.nxbchjhjb"></a>9.nxbchjhjb</h3><h3 id="10-nnjk"><a href="#10-nnjk" class="headerlink" title="10.nnjk"></a>10.nnjk</h3><h3 id="11-bh"><a href="#11-bh" class="headerlink" title="11.bh"></a>11.bh</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-chhewdnvf&quot;&gt;&lt;a href=&quot;#1-chhewdnvf&quot; class=&quot;headerlink&quot; title=&quot;1.chhewdnvf&quot;&gt;&lt;/a&gt;1.chhewdnvf&lt;/h3&gt;&lt;h3 id=&quot;2-bewhhjbu&quot;&gt;&lt;a href=&quot;#2-bewhh</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Java基本语法知识</title>
    <link href="http://example.com/2022/01/19/Java1/"/>
    <id>http://example.com/2022/01/19/Java1/</id>
    <published>2022-01-19T06:07:32.201Z</published>
    <updated>2022-01-20T13:51:44.241Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-Java概述"><a href="#1-Java概述" class="headerlink" title="1.Java概述"></a>1.Java概述</h3><ul><li>Java语言跨平台原理：在需要运行Java应用程序的操作系统上，安装一个与操作系统对应的Java虚拟机（Java Virtual Machine)即可。</li></ul><img src="https://s2.loli.net/2022/01/18/BWh9OrQjZoYv2fq.jpg" style="zoom:50%;" /><ul><li><p>JRE和JDK</p><ul><li><p>JRE (Java Runtime Environment)</p><p> 是Java程序的运行时环境，包含JVM和运行时所需要的核心类库。</p><p> 如果想要运行一个已有的Java程序，那么只需安装JRE。</p></li><li><p>JDK (Java Development Kit)</p><p> 是Java程序开发工具包，包含JRE和开发人员使用的工具。</p><p> 其中的开发工具：编译工具（javac.exe)和运行工具（java.exe)。</p><p> 如果想要开发一个全新的Java程序，那么必须安装JDK。</p><p> JDK中的bin目录路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</p></li></ul></li></ul><img src="https://s2.loli.net/2022/01/18/4xonCuYDip326vT.jpg" style="zoom: 50%;" /><h3 id="2-第一个程序"><a href="#2-第一个程序" class="headerlink" title="2.第一个程序"></a>2.第一个程序</h3><ol><li><p>常用DOS命令</p><ol><li><p>打开命令提示符窗口</p><p>win+R</p><p>输入cmd</p><p>回车</p></li><li><p>常用命令</p></li></ol><img src="https://s2.loli.net/2022/01/18/JD7VHBtnIfxlWsT.jpg" style="zoom: 50%;" /></li><li><p>hello world案例</p><ol><li><p>Java程序开发运行流程</p><p><img src="https://s2.loli.net/2022/01/18/sTuFcPV8GI516fK.jpg"></p></li><li><p>hello world案例的编写</p><p>新建文本文档，修改名称为helloworld.java</p><p>再用记事本打开，编写程序内容</p><p>（Ctrl+S保存）</p><p><img src="https://s2.loli.net/2022/01/18/sBWdKkf43M1mZEr.jpg" style="zoom: 67%;" /><img src="https://s2.loli.net/2022/01/20/AS1zJFowpqUtDLd.jpg" style="zoom:67%;" /></p></li><li><p>hello world案例的编译和运行</p><p>打开命令提示符窗口，进入到helloworld.java所在的目录。输入指令编译和执行。</p><p>编译：javac 文件名.java</p><p>执行：java 类名</p><img src="https://s2.loli.net/2022/01/18/nwvpDL6RbTxuiZE.png" style="zoom: 67%;" /></li><li><p>常见问题</p><p>中英文符号，大小写</p><p>注意：不要隐藏文件的扩展名</p><p>​            类名和文件名要保持一致            </p></li></ol></li></ol><h3 id="3-基础语法"><a href="#3-基础语法" class="headerlink" title="3.基础语法"></a>3.基础语法</h3><ol><li><p>注释</p><p>单行注释               // 注释信息</p><p>多行注释               /* 注释信息 */</p></li><li><p>关键字</p><p>字母全部小写</p><p>常用的代码编辑器针对关键字有特殊的颜色标记</p></li><li><p>常量</p><ol><li><p>程序运行过程中其值不发生改变的量</p><img src="https://s2.loli.net/2022/01/18/ZbGhX8LKVr4cenT.jpg" style="zoom:50%;" /></li></ol><p>​        输出——时，System.out.println(“——“);</p></li><li><p>数据类型</p><ol><li><p>计算机存储单元</p><p>无论内存还是硬盘，计算机存储设备的最小信息单元叫”位(bit)”,用”b”表示。</p><p>计算机中最小的存储单元叫”字节(byte)”,用B表示，字节由连续的8个位组成。</p><p>1B=8bit</p><p>1KB=1024B</p><p>1MB=1024KB</p><p>1GB=1024MB</p><p>1TB=1024GB</p></li><li><img src="https://s2.loli.net/2022/01/18/cEZsWLih3JIGd2H.jpg" style="zoom: 50%;" /></li></ol><img src="https://s2.loli.net/2022/01/18/zlHidoExBqUFPQM.jpg" style="zoom:50%;" /></li><li><p>变量</p><p>变量的定义：数据类型 变量名=变量值；</p><p>变量的使用：取值   变量名</p><p>​                       修改   变量名=变量值；</p><p>注意事项：定义long类型变量时，在后面加L，否则会把值认为int类型而可能报错。</p><p>​                    long l=1000000000L；</p><p>​                    定义float类型变量时，在后面加F，防止类型不兼容。</p><p>​                     float f=13.2F；</p><p>​                     变量名不能重复。</p><p>​                     变量未赋值不能使用。</p></li><li><p>标识符</p><p>（给类、方法、变量等起名字的符号）</p><p>由数字、字母、下划线和$组成</p><p>不能以数字开头</p><p>不能是关键字</p><p>区分大小写<img src="https://s2.loli.net/2022/01/18/evThnZrpWRGxsHb.jpg" style="zoom:50%;" /></p></li><li><p>类型转换</p><ol><li><p>自动类型转换</p><p>把一个表示数据范围小的数值或变量赋值给另一个表示数据范围大的变量<img src="https://s2.loli.net/2022/01/18/5jhiXrvFyZfsazA.jpg" style="zoom:50%;" /></p></li><li><p>强制类型转换</p><p>把一个表示数据范围大的数值或变量赋值给另一个表示数据范围小的变量</p><p>格式：目标数据类型 变量名 = （目标数据类型) 值或者变量；</p><p>例：int k = (int)88.88;     变成88</p></li></ol></li></ol><h3 id="4-运算符"><a href="#4-运算符" class="headerlink" title="4.运算符"></a>4.运算符</h3><ol><li><p>算数运算符</p><ol><li><p>+-*/%</p><p>整数相除只能得到整数，要想得到小数必须有浮点数的参与。</p></li><li><p>字符的”+“操作：用字符的ASCII码进行计算</p><p>int i=10;</p><p>char c=’A’;</p><p>System.out.println(i+c);   得到75</p><p>char ch = i + c;报错<img src="https://s2.loli.net/2022/01/18/3F6YOI7yGjkX2cW.jpg" style="zoom: 50%;" /></p></li><li><p>字符串的”+“操作（字符串连接符）</p><p>System.out.println(“ch”+”en”);    得到chen</p><p>System.out.println(“chen”+936);    得到chen936</p><p>System.out.println(936+”chen”);    得到936chen</p><p>System.out.println(“小陈”+9+36);    得到小陈936</p><p>System.out.println(9+36+”小陈”);    得到936小陈     一旦出现字符串就是拼接</p></li></ol></li><li><p>赋值运算符</p><p>=</p><p>i +=2； 相当于i自增2（把左右数据做加法操作，结果赋值给左边）类似的有-=   *=   /=   %=</p><p>注意：short s=10;</p><p>​            s +=20;            //需要修改为 s=(short)(s+20);</p><p>​            System.out.println(“s:”+s);  报错，原因是扩展的赋值运算符底层隐含了强制类型转换。</p></li><li><p>自增自减运算符</p><img src="https://s2.loli.net/2022/01/18/xlsc7YVgh13inQ4.jpg" style="zoom: 50%;" /></li><li><p>关系运算符</p><p>==    !=    &gt;    &gt;=    &lt;    &lt;=</p><p>int i=10;</p><p>int j=10;</p><p>int k=20;</p><p>System.out.println(i==j);     输出结果为true</p><p>System.out.println(i==k);     输出结果为false</p></li><li><p>逻辑运算符</p><img src="https://s2.loli.net/2022/01/18/j2uqFelgnvZVGo6.jpg" style="zoom:50%;" /><img src="https://s2.loli.net/2022/01/18/tMe6jE5kCHhOiYF.jpg" style="zoom:50%;" /></li><li><p>三元运算符</p><p>格式：关系表达式 ？表达式1：表达式2；</p><p>例：a&gt;b?a:b;  得到a、b中的较大值</p><p>首先计算关系表达式的值。</p><p>如果值为true，表达式1的值就是运算结果；</p><p>如果值为false，表达式2的值就是运算结果。</p><p>boolean b = h1==h2 ? true : false;  用于判断h1和h2是否相等。</p></li></ol><h3 id="5-数据输入"><a href="#5-数据输入" class="headerlink" title="5.数据输入"></a>5.数据输入</h3><ol><li><p>Scanner使用的基本步骤<img src="https://s2.loli.net/2022/01/18/PXrvGj7c6Cl23FH.jpg"></p><p>提示输入的语句写在2，3之间。</p></li><li><p>三个和尚<img src="https://s2.loli.net/2022/01/18/C4jdyJQgatVuzZY.jpg"></p></li></ol><h3 id="6-分支语句"><a href="#6-分支语句" class="headerlink" title="6.分支语句"></a>6.分支语句</h3><ol><li><p>流程控制</p><ul><li><p>流程控制语句分类</p><p>顺序结构</p><p>分支结构</p><p>循环结构</p></li></ul></li><li><p>if语句</p><ol><li><p>格式1：</p><p>if (关系表达式) {</p><p>​    语句体；</p><p>}</p></li><li><p>格式2：</p><p>if (关系表达式) {</p><p>​    语句体1；</p><p>} else{</p><p>​    语句体2；</p><p>}</p></li><li><p>格式3：</p><p>if (关系表达式1) {</p><p>​    语句体1；</p><p>} else if (关系表达式2) {</p><p>​    语句体2；</p><p>}</p><p>···</p><p>else {</p><p>​    语句体n+1;</p><p>}</p></li></ol></li><li><p>switch语句</p><p>格式：</p><p>switch(表达式) {                                    表达式：可以是枚举、字符串</p><p>​    case 值1：</p><p>​                        语句体1；</p><p>​                        break；    </p><p>​    case 值2：</p><p>​                        语句体2；</p><p>​                        break；</p><p>​    ···</p><p>​    default：</p><p>​                        语句体n+1；</p><p>​                        break；</p><p>}</p><p>如果不写break会出现穿透现象，语句体相同时可以联写</p></li></ol><h3 id="7-循环语句"><a href="#7-循环语句" class="headerlink" title="7.循环语句"></a>7.循环语句</h3><ol><li><p>for循环语句：</p><p>for (初始化语句；条件判断语句；条件控制语句) {</p><p>​    循环体语句；</p><p>}</p></li><li><p>while循环语句：</p><p>while (条件判断语句) {</p><p>​    循环体语句；</p><p>​    条件控制语句；</p><p>}</p></li><li><p>do···while循环语句</p><p>do {</p><p>​    循环体语句；</p><p>​    条件控制语句；</p><p>} while (条件判断语句)；<img src="https://s2.loli.net/2022/01/19/zHCJmwyX7c5nFNv.jpg"></p></li><li><p>跳转控制语句</p><p>continue:用在循环中，基于条件控制，跳过某次循环体内容的执行，继续下一次的执行。</p><p>break:用在循环中，基于条件控制，终止循环体内容的执行，也就是说结束当前的整个循环。<img src="https://s2.loli.net/2022/01/19/twD2Xn4GOAE5rPL.jpg"></p><p>输出结果是1</p></li><li><p>循环嵌套</p><p>循环语句中包含循环语句称为循环嵌套（类似的有分支嵌套）。</p></li><li><p>Random</p><p><img src="https://s2.loli.net/2022/01/19/gzrCsXyUN8Htn6E.jpg"></p><p>获取1~100的随机数：int x=r.nextInt(100)+1;</p></li></ol><h3 id="8-IDEA"><a href="#8-IDEA" class="headerlink" title="8.IDEA"></a>8.IDEA</h3><ol><li><p>IDEA概述</p><p>IDEA全程IntelliJ IDEA，是用于Java语言开发的集成环境，它是业界公认的目前用于Java程序开发最好的工具。</p><p>集成环境：把代码编写、编译、执行、调试等多种功能综合到一起的开发工具。</p></li><li><p>IDEA中HelloWorld</p><ol><li><p>创建一个空项目JavaSE_Code</p><p>Module可以在窗口左上的File–New–moudle里打开，选Java和JDK的安装路径</p></li><li><p>创建一个新模块idea_test</p><p>双击src–Modules选择刚创建的idea_test–OK才会出现idea_test.iml</p></li><li><p>在idea_test模块下的src下创建一个包(com.chen)</p><p>右键点击src–New–Package–com.chen回车</p></li><li><p>在com.chen包下新建一个类(HelloWorld)</p><p>右键选这个包–New–Java Class–HelloWorld回车</p></li><li><p>在HelloWorld类中编写代码</p></li><li><p>在idea中执行程序</p><p>右键–Run···(class文件在out里)<img src="https://s2.loli.net/2022/01/19/qMVJxyjZE4Bb89l.jpg" style="zoom:67%;" /></p></li></ol></li><li><p>IDEA中项目结构</p><img src="https://s2.loli.net/2022/01/19/cNzFaIVPjSQ36si.jpg" style="zoom:50%;" /></li><li><p>IDEA中内容辅助键和快捷键</p><ul><li>快速生成语句<ul><li>快速生成main()方法：psvm,回车</li><li>快速生成输出语句：sout,回车</li></ul></li><li>注释<ul><li>单行：选中代码，Ctrl+/，再来一次就是取消</li><li>单行：选中代码，Ctrl+Shift+/，再来一次就是取消</li></ul></li><li>格式化<ul><li>Ctrl+Alt+L(登了qq的时候会把qq锁了)</li></ul></li></ul></li><li><p>IDEA中模块的操作</p><ul><li><p>新建模块</p><ul><li>File – Project Structure··· – Modules – + – New Module –Java– Next</li></ul></li><li><p>删除模块</p><ul><li>右键选择要删除的模块，Remove Module</li><li>定位：右键选择模块，Open In，Explorer（彻底删除要在硬盘里删除）</li></ul></li><li><p>导入模块</p><ul><li>File – Project Structure··· – Modules – + – Import Module –  找到需要导入的模块名称 – OK – 一直Next –Overwrite – Finish – OK – Project SDK is not difined – Setup SDK – OK</li></ul></li></ul></li></ol><h3 id="9-数组"><a href="#9-数组" class="headerlink" title="9.数组"></a>9.数组</h3><ol><li><p>数组定义格式</p><p>数组：一种用于存储多个相同类型数据的存储模型。</p><ul><li><p>格式1：数据类型[] 变量名</p><p>​              int[] arr</p><p>定义了一个int类型的数组，数组名是arr（推荐）</p></li><li><p>格式2：数据类型 变量名[]</p><p>​              int arr[]</p><p>定义了一个int类型的变量，变量名是arr数组</p></li></ul></li><li><p>数组初始化之动态初始化</p><p>Java中的数组必须先初始化，才能使用。</p><p>初始化：为数组中的数组元素分配内存空间，并为每个数组元素赋值。</p><p>动态初始化：初始化时只指定数组长度，由系统为数组分配初始值（int类型默认为0）。</p><p>格式：数据类型[] 变量名 = new 数据类型[数组长度];  new为数组申请内存空间。</p><p>​            int[] arr = new int[3];</p></li><li><p>数组元素访问</p><ul><li><p>数组变量访问方式</p><p>格式：数组名</p></li><li><p>数组内部保存的数据的访问方式</p><p>格式：数组名[索引]</p><p>索引是数组中数据的编号方式，用于访问数组中的数据，数组名[索引]等同于变量名，是一种特殊的变量名。（从0开始）</p><img src="https://s2.loli.net/2022/01/19/xFkVfm3wJdTnKDP.jpg" style="zoom:67%;" /></li></ul></li><li><p>内存分配</p><p>假定用001来标识右边那块内存空间(黑框)，称001为内存地址值。</p><p><img src="https://s2.loli.net/2022/01/19/MJYGQhX5W9geSPR.jpg"></p><p>多个数组指向相同时，任何一个数组修改了堆内存的数据，另一个数组去访问时元素值也发生改变。<img src="https://s2.loli.net/2022/01/19/sx342yS7kqVUgX5.jpg"></p><p><img src="https://s2.loli.net/2022/01/19/DhYCSbfzTeKnOt9.jpg"></p></li><li><p>数组初始化之静态初始化</p><p>初始化时指定每个数组元素的初始值，由系统决定数组长度。</p><p>格式：数据类型[] 变量名 = new 数据类型[] {数据1,数据2,数据3······}；</p><p>​            int[] arr = new int[] {1,2,3};</p><p>简化格式：数据类型[] 变量名 = {数据1,数据2,数据3······}；</p><p>​                    int[] arr = {1,2,3};</p></li><li><p>数组操作的两个常见小问题</p><ul><li><p>索引越界：访问了数组中不存在的索引对应的元素</p><p>ArrayIndexOutOfBoundsException</p></li><li><p>空指针异常：访问的数组已经不再指向堆内存的数据</p><p>NullPointerException</p><p><img src="https://s2.loli.net/2022/01/19/QWrvDg1TaYiS6Ij.jpg"></p></li></ul></li><li><p>数组常见操作</p><ul><li><p>遍历</p><p>获取数组元素个数：数组名.length</p><p>int[] arr = {······}；</p><p>for(int x=0; x&lt;arr.length; x++) {</p><p>​    System.out.println(arr[x]);</p><p>}</p></li><li><p>获取最值</p><img src="https://s2.loli.net/2022/01/19/Zep8a5QW9GLdFYz.jpg" style="zoom:50%;" /></li></ul></li></ol><h3 id="10-方法"><a href="#10-方法" class="headerlink" title="10.方法"></a>10.方法</h3><ol><li><p>方法概述</p><p>方法是将具有独立功能的代码块组织成一个整体，使其具有特殊功能的代码集。</p><ul><li><p>注意：方法必须先创建才可以使用，该过程称为方法定义。</p><p>​            方法创建后不是直接运行的，需要手动使用后才执行，该过程称为方法调用。</p><p>​            方法必须先定义后调用，否则程序将报错。</p></li></ul></li><li><p>方法的定义和调用</p><p>定义格式：public static void 方法名(){</p><p>​                    方法体</p><p>​            }</p><p>调用格式：方法名();</p><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://s2.loli.net/2022/01/19/BSFu86Yt9mTXxHA.jpg"></h1></li><li><p>带参数方法的定义和调用</p><ul><li><p>定义</p><ul><li>格式(单个参数)：public static void 方法名(数据类型 变量名) {······}</li><li>格式(多个参数)：public static void 方法名(数据类型 变量名1，数据类型 变量名2，······) {······}</li></ul></li><li><p>调用</p><ul><li><p>格式(单个参数)：方法名(变量名/常量值)；</p></li><li><p>格式(多个参数)：方法名(变量名1/常量值1，变量名2/常量值2······)；</p></li></ul></li><li><p>形参(方法定义中的参数)</p><p>实参(方法调用中的参数)</p></li></ul></li><li><p>带返回值方法的定义和调用</p><ul><li><p>定义格式(方法通用格式)：public static 数据类型 方法名(参数) {</p><p>​                            方法体；</p><p>​                            return 数据；</p><p>​                    }</p><p>数据(返回值)类型和数据要匹配。</p><p>public static是修饰符。</p></li><li><p>调用格式1：方法名(参数)；</p><p>调用格式2：数据类型 变量名 = 方法名(参数)；</p><p>方法的返回值通常用变量接收，否则该返回值无意义。</p></li></ul><h1 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://s2.loli.net/2022/01/20/j5rp4EbYSd6yBNe.jpg" style="zoom:50%;" /></h1></li><li><p>方法的注意事项</p><ul><li><p>方法不能嵌套定义。</p></li><li><p>void表示无返回值，可以省略return，也可以单独书写return(一般不写)。</p><p>void类型的方法直接调用即可，非void类型的方法推荐接收调用。</p><img src="https://s2.loli.net/2022/01/20/qVTeUR86uvar4Ep.jpg" style="zoom:50%;" /></li></ul></li><li><p>方法重载</p><ol><li><p>方法重载概述</p><p>方法重载指同一个类中定义的多个方法之间的关系，满足下列条件的多个方法相互构成重载：</p><ul><li>多个方法在同一个类中</li><li>多个方法具有相同的方法名</li><li>多个方法的参数不同，类型不同或数量不同</li></ul><p>同类同名不同参。</p></li><li><p>方法重载的特点</p><ul><li><p>重载仅对应方法的定义，与方法的调用无关，调用方式参照标准格式</p></li><li><p>重载仅针对同一个类中方法的名称与参数进行识别，与返回值无关(不能通过返回值来判定两个方法是否相互构成重载)</p><img src="https://s2.loli.net/2022/01/20/rwdGQnoA9xB4uRp.jpg" style="zoom:50%;" /></li></ul></li></ol></li><li><p>方法的参数传递</p><ul><li><p>基本类型</p><p>对于基本数据类型的参数，形式参数的改变不影响实际参数的值。</p><img src="https://s2.loli.net/2022/01/20/QFvpZeoJNRzkUdm.jpg" style="zoom:67%;" /><img src="https://s2.loli.net/2022/01/20/R5FjNMqeH8EXGQb.jpg" style="zoom:67%;" /><p>该例两个方法中定义的number都是局部变量，只是名字相同，但物理地址、逻辑地址不同。</p><p>实参和形参占据的是两块不同的内存。</p></li><li><p>引用类型</p><p>对于引用类型的参数，形式参数的改变影响实际参数的值。</p><p><img src="https://s2.loli.net/2022/01/20/SLmT2hEZve6WkwM.jpg" style="zoom:67%;" /><img src="https://s2.loli.net/2022/01/20/ABGdS4yntLCvFMp.jpg" style="zoom:67%;" /><img src="https://s2.loli.net/2022/01/20/hQHJtgG2dTa9ecD.jpg" style="zoom:67%;" /></p></li></ul></li></ol><h3 id="11-Debug"><a href="#11-Debug" class="headerlink" title="11.Debug"></a>11.Debug</h3><ol><li><p>Debug概述</p><p>是程序调试工具，可用于查看程序的执行流程，也可用于追踪程序执行过程来调试程序。</p></li><li><p>Debug操作流程</p><p>Debug调试，又称断点调试，断点其实是一个标记，告诉我们从哪里开始查看。</p><ul><li><p>如何加断点</p><p>选择要设置断点的代码行，在行号的区域后面单击鼠标左键</p></li><li><p>如何运行加了断点的程序</p><p>代码区域右键Debug执行</p></li><li><p>看哪里</p><p>Debugger窗口，左边看代码执行到哪里，右边看代码执行过程中变量的变化</p><p>Console窗口，看程序执行过程中的结果展示</p></li><li><p>点哪里</p><p>继续执行：Step Into(F7)这个箭头，也可以直接按F7</p><p>结束：Stop</p></li><li><p>如何删除断点</p><p>选择要删除的断点，单击左键</p><p>或者点结束下面那个勾选，再点减号，再点Done</p></li></ul></li><li><p>注意事项</p><p>如果数据来自于键盘输入，一定要记得手动输入。</p></li></ol><h3 id="12-小练习"><a href="#12-小练习" class="headerlink" title="12.小练习"></a>12.小练习</h3><ul><li><p>导包</p><ul><li>手动导包：import java.util.Scanner;</li><li>快捷键导包：Alt + Enter</li><li>自动导包：创建对象时只输入一部分然后Enter</li></ul></li><li><p>取余结果为0是整除</p></li><li><img src="https://s2.loli.net/2022/01/20/veQIOLh6c87VbMs.jpg" style="zoom:50%;" /></li><li><p>反转</p><p><img src="https://s2.loli.net/2022/01/20/TvFCifQoL6JtdwV.jpg" style="zoom:50%;" /><img src="https://s2.loli.net/2022/01/20/n1Rvtr3cLXz9gG4.jpg" style="zoom:50%;" /><img src="https://s2.loli.net/2022/01/20/6pROCM3YsgEtVX8.jpg" style="zoom:50%;" /></p></li><li><p>方法中执行到return就立即返回</p><img src="https://s2.loli.net/2022/01/20/AepoGvWciNqs69x.png" style="zoom:50%;" /></li><li><p>斐波那契数列</p><img src="https://s2.loli.net/2022/01/20/otIlfmiFd8Ay43s.jpg" style="zoom:50%;" /><img src="https://s2.loli.net/2022/01/20/WXDNiuF1bOZLH76.jpg" style="zoom:50%;" /></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-Java概述&quot;&gt;&lt;a href=&quot;#1-Java概述&quot; class=&quot;headerlink&quot; title=&quot;1.Java概述&quot;&gt;&lt;/a&gt;1.Java概述&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Java语言跨平台原理：在需要运行Java应用程序的操作系统上，安装一个与操作系</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>learn to use typora</title>
    <link href="http://example.com/2022/01/17/learn%20to%20use%20typora/"/>
    <id>http://example.com/2022/01/17/learn%20to%20use%20typora/</id>
    <published>2022-01-17T11:55:34.810Z</published>
    <updated>2022-01-19T13:02:58.946Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>Ctrl+n :  n级标题</p><h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><p>正文</p><h3 id="2-引用"><a href="#2-引用" class="headerlink" title="2.引用"></a>2.引用</h3><p>引用 :  &gt; + 空格</p><p>退出引用 :  Shift + Tab</p><p>角标 :  </p><p>方括号里括^和数字</p><p>角标<a href="%E5%87%BA%E8%87%AA%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7%C2%B7">^1</a></p><blockquote><p>引用</p></blockquote><h3 id="3-列表"><a href="#3-列表" class="headerlink" title="3.列表"></a>3.列表</h3><p>无序列表 :  Ctrl + Shift + ]</p><p>子列表 :  Tab</p><p>回退 :  Shift + Tab</p><ul><li>列表</li><li>列表<ul><li>子列表<ul><li>子列表again</li></ul></li><li>回退到上一个子列表</li></ul></li><li>再回退</li></ul><p>有序列表 :  Ctrl + Shift +[</p><ol><li>列表</li><li>列表<ol><li>子列表</li></ol></li></ol><h3 id="4-链接"><a href="#4-链接" class="headerlink" title="4.链接"></a>4.链接</h3><p>[链接名称] + (地址)</p><p><a href="www.baidu.com">百度</a></p><h3 id="5-图像"><a href="#5-图像" class="headerlink" title="5.图像"></a>5.图像</h3><p><img src="https://s2.loli.net/2022/01/17/xb8MypS2BOLKavU.jpg"></p><h3 id="6-划重点"><a href="#6-划重点" class="headerlink" title="6.划重点"></a>6.划重点</h3><p>高亮 :   <img src="https://s2.loli.net/2022/01/17/IiqoHKBjLxzGdwb.png"></p><p>==高亮==</p><p>加粗 ：Ctrl + B</p><p><strong>加粗</strong></p><p>两个*中间夹斜体</p><p><em>斜体</em></p><h3 id="7-表格"><a href="#7-表格" class="headerlink" title="7.表格"></a>7.表格</h3><p>插入表格 ：Ctrl + T</p><table><thead><tr><th>chen</th><th></th><th></th></tr></thead><tbody><tr><td>zhang</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.代码块"></a>8.代码块</h3><p>输入3个*并按回车</p><hr><p>int c=1;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-标题&quot;&gt;&lt;a href=&quot;#1-标题&quot; class=&quot;headerlink&quot; title=&quot;1.标题&quot;&gt;&lt;/a&gt;1.标题&lt;/h3&gt;&lt;p&gt;Ctrl+n :  n级标题&lt;/p&gt;
&lt;h1 id=&quot;标题1&quot;&gt;&lt;a href=&quot;#标题1&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/11/23/hello-world/"/>
    <id>http://example.com/2021/11/23/hello-world/</id>
    <published>2021-11-23T00:27:48.068Z</published>
    <updated>2021-11-23T00:27:48.068Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
